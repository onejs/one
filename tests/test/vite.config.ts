import type { UserConfig } from 'vite'
import { one } from 'one/vite'

console.log('config file here')

export default {
  ssr: {
    noExternal: ['one'],
  },
  define: {
    'import.meta.env.VITE_ENVIRONMENT': '"ssr"',
  },
  environments: {
    ssr: {
      resolve: {
        noExternal: [
          'nativewind/jsx-dev-runtime',
          'nativewind/jsx-runtime',
          'nativewind',
          'react-native-css-interop/jsx-runtime',
          'react-native-css-interop/jsx-dev-runtime',
          'react-native-css-interop',
          'secure-json-parse',
          '@vxrn/safe-area',
          '@vxrn/vendor/react-19-prod',
          '@vxrn/vendor/react-19',
          '@vxrn/vendor/react-19-compiler-runtime',
          '@vxrn/vendor/react-dom-19',
          '@vxrn/vendor/react-dom-client-19',
          '@vxrn/vendor/react-dom-server.browser-19',
          '@vxrn/vendor/react-jsx-19',
          '@vxrn/vendor/react-jsx-dev-19',
          'react',
          'react/jsx-runtime',
          'react/jsx-dev-runtime',
          'react/compiler-runtime',
          'react-dom',
          'react-dom/server',
          'react-dom/client',
          'react-native-web-internals',
          'react-native-web',
          '@react-native-masked-view/masked-view',
          'url-parse',
          'query-string',
          'escape-string-regexp',
          'use-latest-callback',
          'react-is',
          'fast-deep-equal',
          '@supabase/auth-helpers-react',
          '@supabase/postgres-js',
          'core-js',
          'parse-numeric-range',
          'use-sync-external-store',
          'use-sync-external-store/shim',
          'expo-constants',
          'expo-linking',
          'inline-style-prefixer',
          '@docsearch/react',
          '@algolia/autocomplete-core',
          '@algolia/autocomplete-plugin-algolia-insights',
          '@algolia/autocomplete-shared',
          'moti',
          'fast-xml-parser',
          'set-cookie-parser',
          'ipaddr.js',
          'cross-fetch',
          'pg',
          '@rocicorp/zero',
          'react-scan',
          'react-native-svg',
          'react-native-screens',
          'ws',
          'lodash',
          'moti/author',
          'reading-time',
          'mdx-bundler/client',
          'gray-matter',
          'glob',
          'memoize-one',
          'css-in-js-utils',
          'hyphenate-style-name',
          'react-native-reanimated',
          '@react-navigation/core',
          '@react-navigation/native',
          '@react-navigation/elements',
          '@react-navigation/bottom-tabs',
          '@react-navigation/native-stack',
          'one',
          'styleq',
          'fbjs',
          '@vxrn/universal-color-scheme',
          '@vxrn/color-scheme',
          'requires-port',
          'querystringify',
          'compare-versions',
          'strict-uri-encode',
          'expo-document-picker',
          'decode-uri-component',
          'split-on-first',
          'filter-obj',
          'scheduler',
          'warn-once',
          '@radix-ui/react-compose-refs',
          '@radix-ui/react-slot',
          'expo-splash-screen',
          'nanoid',
          'swr',
          'swr/mutation',
          'one/zero',
          'refractor/lang/tsx',
          'invariant',
          'tamagui/linear-gradient',
          '@react-native/normalize-color',
          'expo-modules-core',
          'expo-status-bar',
          'react-native-web-lite',
          'react-native',
          '@floating-ui/react',
          '@floating-ui/react-dom',
          'tamagui',
          'reforest',
          '@tamagui/config',
          '@tamagui/animations-css',
          '@tamagui/constants',
          '@tamagui/use-presence',
          '@tamagui/web',
          '@tamagui/web/native',
          '@tamagui/compose-refs',
          '@tamagui/helpers',
          '@tamagui/use-did-finish-ssr',
          '@tamagui/use-event',
          '@tamagui/use-force-update',
          '@tamagui/animations-moti',
          'moti',
          'framer-motion',
          '@tamagui/animations-react-native',
          '@tamagui/font-inter',
          '@tamagui/core',
          '@tamagui/react-native-media-driver',
          '@tamagui/react-native-use-pressable',
          '@tamagui/react-native-use-responder-events',
          '@tamagui/font-silkscreen',
          '@tamagui/shorthands',
          '@tamagui/themes',
          '@tamagui/create-theme',
          '@tamagui/theme-builder',
          '@tamagui/image-next',
          '@tamagui/lucide-icons',
          '@tamagui/helpers-icon',
          '@tamagui/vite-plugin',
          '@tamagui/react-native-web-lite',
          '@tamagui/react-native-web-internals',
          '@tamagui/static',
          '@tamagui/config-default',
          '@tamagui/generate-themes',
          'react-native-web',
          'inline-style-prefixer',
          'expo',
          '@expo/config',
          '@expo/config-plugins',
          '@expo/config-types',
          '@expo/json-file',
          '@expo/plist',
          '@expo/sdk-runtime-versions',
          '@expo/fingerprint',
          '@expo/spawn-async',
          '@expo/metro-config',
          '@expo/env',
          '@expo/vector-icons',
          'expo-asset',
          '@expo/image-utils',
          'expo-constants',
          'expo-file-system',
          'expo-font',
          'expo-keep-awake',
          'expo-modules-autolinking',
          'expo-modules-core',
          'react-native-edge-to-edge',
          'expo-video',
          'react-dom',
          'react-dom/test-utils',
          'react-native-reanimated',
          'react-native-is-edge-to-edge',
          'react-native-safe-area-context',
          'react-native-screens',
          'react-freeze',
          'react-native-svg',
          'tamagui',
          '@tamagui/accordion',
          '@tamagui/collapsible',
          '@tamagui/animate-presence',
          '@tamagui/use-constant',
          '@tamagui/create-context',
          '@tamagui/stacks',
          '@tamagui/use-controllable-state',
          '@tamagui/collection',
          '@tamagui/text',
          '@tamagui/get-font-sized',
          '@tamagui/helpers-tamagui',
          '@tamagui/adapt',
          '@tamagui/portal',
          '@tamagui/alert-dialog',
          '@tamagui/aria-hidden',
          '@tamagui/dialog',
          '@tamagui/dismissable',
          '@tamagui/focus-scope',
          '@tamagui/popper',
          '@tamagui/floating',
          '@floating-ui/react-dom',
          '@floating-ui/react-native',
          '@tamagui/get-token',
          '@tamagui/remove-scroll',
          'react-remove-scroll',
          'react-remove-scroll-bar',
          'react-style-singleton',
          'use-callback-ref',
          'use-sidecar',
          '@tamagui/sheet',
          '@tamagui/scroll-view',
          '@tamagui/use-keyboard-visible',
          '@tamagui/avatar',
          '@tamagui/image',
          '@tamagui/shapes',
          '@tamagui/button',
          '@tamagui/font-size',
          '@tamagui/get-button-sized',
          '@tamagui/card',
          '@tamagui/checkbox',
          '@tamagui/checkbox-headless',
          '@tamagui/focusable',
          '@tamagui/label',
          '@tamagui/elements',
          '@tamagui/form',
          '@tamagui/group',
          '@tamagui/linear-gradient',
          '@tamagui/list-item',
          '@tamagui/popover',
          '@floating-ui/react',
          '@tamagui/animate',
          '@tamagui/progress',
          '@tamagui/radio-group',
          '@tamagui/radio-headless',
          '@tamagui/roving-focus',
          '@tamagui/use-direction',
          '@tamagui/select',
          '@tamagui/separator',
          '@tamagui/use-debounce',
          '@tamagui/slider',
          '@tamagui/switch',
          '@tamagui/switch-headless',
          '@tamagui/tabs',
          '@tamagui/theme',
          '@tamagui/toggle-group',
          '@tamagui/tooltip',
          '@tamagui/use-window-dimensions',
          '@tamagui/visually-hidden',
        ],
      },
    },
  },
  plugins: [
    one({
      web: {
        deploy: 'vercel',
      },

      react: {
        compiler: true,
        // scan: true,
      },

      config: {
        tsConfigPaths: {
          // On CI, the mono-repo may be partially installed and built.
          // While the `tsconfig-paths` plugin might attempt to parsing `tsconfig.json`, other apps in
          // the mono-repo and give us errors such as `failed to resolve "extends":"expo/tsconfig.base"`,
          // we will ignore these errors.
          ignoreConfigErrors: true,
        },
      },
    }),
    {
      name: 'hi',
      configResolved(config) {
        // console.log('config', JSON.stringify(config))
        // console.log('config.environments.ssr.noExternal')
        // console.log(config.environments.ssr.noExternal)
        // console.log('config.ssr.noExternal')
        // console.log(config.ssr.noExternal)
      },
    },
  ],
} satisfies UserConfig
